<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jc blog</title>
    <link>http://jcchen9416.github.io/</link>
    <description>Recent content on jc blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 28 Feb 2019 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://jcchen9416.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Encrypt org files</title>
      <link>http://jcchen9416.github.io/posts/encrypt-org-files/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0800</pubDate>
      
      <guid>http://jcchen9416.github.io/posts/encrypt-org-files/</guid>
      <description>使用Gpg对整个文件加密 概念 GPG,OpenGPG,GnuPG Gpg(Pretty Good Privacy)是一个数据加密和数字签名的程序. 由于其广泛应用,后来形成一个开放的标准 OpenGPG. GnuPG是实现了</description>
    </item>
    
    <item>
      <title>gpg使用参考</title>
      <link>http://jcchen9416.github.io/posts/gpg/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0800</pubDate>
      
      <guid>http://jcchen9416.github.io/posts/gpg/</guid>
      <description>PGP (Pretty Good Privacy) 是由 Phil Zimmermann （之所以提这个名字是因为这位仁兄背后有一段故事，有兴趣可以找找他的八卦）于 1991 开发的一个用于数据加密和数字签名的程序，由于被广</description>
    </item>
    
    <item>
      <title>scala pattern match on Array and List</title>
      <link>http://jcchen9416.github.io/posts/scala-pattern-match-on-array-and-list/</link>
      <pubDate>Fri, 15 Feb 2019 15:14:00 +0800</pubDate>
      
      <guid>http://jcchen9416.github.io/posts/scala-pattern-match-on-array-and-list/</guid>
      <description>&lt;p&gt;The following shows you how to use scala pattern match on Array and List.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ox-hugo使用测试</title>
      <link>http://jcchen9416.github.io/posts/ox-hugo%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Sat, 09 Feb 2019 20:17:00 +0800</pubDate>
      
      <guid>http://jcchen9416.github.io/posts/ox-hugo%E4%BD%BF%E7%94%A8%E6%B5%8B%E8%AF%95/</guid>
      <description>使用 多文件关联 如果是同个文件的关联,直接用 org-mode 内部的链接方式即可. 但如果是跨 post 链接,那就不行了. 必须按照生成的URL来进行链接. 如下: [[/post/org-file-header][link description]] 图片</description>
    </item>
    
    <item>
      <title>ox-hugo</title>
      <link>http://jcchen9416.github.io/posts/ox-hugo/</link>
      <pubDate>Fri, 08 Feb 2019 13:00:00 +0800</pubDate>
      
      <guid>http://jcchen9416.github.io/posts/ox-hugo/</guid>
      <description>Table of Contents Features org capture setup auto export ox-hugo使用测试 Features 用 org-mode 完整写完后,再 export 成 hugo markdown. org capture setup TO BE IMPLEMENT auto export 主要是开启 (org-hugo-auto-export-mode). 然后保存的时候会自动export. 可以在文件</description>
    </item>
    
    <item>
      <title>my first hugo post</title>
      <link>http://jcchen9416.github.io/posts/my-first-hugo-post/</link>
      <pubDate>Fri, 08 Feb 2019 12:00:00 +0800</pubDate>
      
      <guid>http://jcchen9416.github.io/posts/my-first-hugo-post/</guid>
      <description>Hello hugo. Will be remove soon! Hugo Features Jekyll -&amp;gt; Hugo 如何在emacs中使用hugo easy-hugo ox-hugo Hugo Features 参考文档: 博客写作流程之工具篇： emacs, orgmode, hugo &amp;amp; ox-hugo</description>
    </item>
    
  </channel>
</rss>